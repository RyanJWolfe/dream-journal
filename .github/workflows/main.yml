name: CI/CD
on: [push, pull_request]
jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
        with:
          bundler-cache: true
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load
      # Add or replace test runners here
      - name: Run tests
        run: make test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
        with:
          bundler-cache: true
      # Add or replace any other lints in the Makefile
      - name: run linters
        run: make lint

#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#    needs: test
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      # Add or replace dependency steps here
#      - name: Install Ruby and gems
#        uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
#        with:
#          bundler-cache: true
#      - name: Configure SSH
#        run: |
#          mkdir -p ~/.ssh/
#          echo "$SSH_KEY" > ~/.ssh/staging.key
#          chmod 600 ~/.ssh/staging.key
#          cat >>~/.ssh/config <<END
#          Host podsstaging
#            HostName $SSH_HOST
#            User $SSH_USER
#            IdentityFile ~/.ssh/staging.key
#            StrictHostKeyChecking no
#          END
#        env:
#          SSH_USER: deploy
#          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
#          SSH_HOST: 52.36.64.116
#      - name: Deploy to AWS
#        run: make deploy
#        env:
#          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
#          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
#          RDS_USERNAME: postgres
#          RDS_PORT: 5432
#          RDS_DB_NAME: pods
#          RDS_HOSTNAME: pods-postgres.cwlqsltmiil5.us-west-2.rds.amazonaws.com
